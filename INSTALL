-----------------
PREPARE FOR BUILD
-----------------
Compiling with Qt5 needs qtbase5-dev, qtmultimedia5-dev, libqt5printsupport5, libqt5multimedia5 
Name of packages can be different on distributions.

---------------
BUILD for Linux
---------------
On linux systems you need the following packages installed to build: cmake, make, g++ and selected Qt packages
Other packages needed un ubuntu 18.04: libftdi1-dev libftdipp1-dev libusb-1.0.0-dev
To build the executable binary file run the script:

# ./create_elf_binary.sh

In this shell script you can change followed options in the line: 
cmake -DUSE_DEBUGGER=ON -DUSE_QT5=ON ..

USE_DEBUGGER ON/OFF: the debug information in binary file
USE_QT5      ON/OFF: select Qt5 or Qt4
USE_PROFILER ON/OFF: include the information for profiling 


After compiling the linux binary you can test the executable:
# ./ponyprog

Or with debugger:
# gdb -ex run --args ./ponyprog

But for direct communication about TTY be sure, than you have access rights. 
Your username must be added to the tty group. Same playing for the LPT case.
The other possibility tu run the program is 'sudo' tool.

To generate the debian installer file (deb) please run the script:
# ./create_deb_package.sh 

Install the package 
# sudo dpkg -i ./ponyprog*.deb


The installation set the capabilities from postinst script:
# setcap 'cap_sys_tty_config=+ep' /usr/bin/ponyprog


To generate the rpm file run the script :
# ./create_rpm_package.sh 


-----------------------------
BUILD for Windows using MinGW
-----------------------------
Install QT SDK 5 and CMake.
Download libftdi1-1.5_devkit_x86_x64_19July2020.zip from SourceForge and install extract it in C:\

To build the executable file run the script:
# create_exe_binary.bat

You will find ponyprog.exe in the build directory.

To package the installer file, install "Inno Setup" and run:
# create_inno_package.bat

You will find the setup.exe in distribution/innosetup/Output.
